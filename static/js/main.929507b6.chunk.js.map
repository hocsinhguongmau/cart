{"version":3,"sources":["context/context.tsx","components/button/Button.tsx","components/product/Product.tsx","components/cartItem/CartItem.tsx","components/productSummary/ProductSummary.tsx","components/summary/Summary.tsx","components/discards/Discards.tsx","components/approved/Approved.tsx","pages/cart/Cart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductContext","React","createContext","undefined","CartContext","carts","handleSubtractQuantity","handleAddQuantity","handleRemoveProduct","handleRemoveCart","handleApprovedCart","Button","children","onClickHandler","onClick","className","Product","cartProduct","cartIndex","withButtons","products","useContext","map","product","id","productId","key","alt","title","src","image","price","icon","faMinus","quantity","faPlus","faTrashAlt","CartItem","cart","data-testid","faCheck","cellPadding","cellSpacing","cartId","ProductSummary","discount","toFixed","total","Summary","useState","finalPrice","setFinalPrice","useEffect","forEach","index","Number","filter","totalSummary","colSpan","Discards","discards","discard","Approved","approved","api","Cart","isLoading","setIsLoading","cartError","setCartError","productError","setProductError","setCarts","setProducts","setDiscards","setApproved","showSummary","setShowSummary","summaryCarts","setSummaryCarts","handleCheckout","summaryProducts","push","result","reduce","r","Object","values","fetchCarts","a","axios","get","then","response","data","catch","error","fetchProducts","Provider","value","clonedCarts","modifiedCarts","filteredProduct","removedCarts","find","newCart","length","filteredCart","filteredCarts","fetch","method","res","json","console","log","removeCarts","approvedCarts","body","JSON","stringify","faSpinner","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.929507b6.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { CartType, ProductType } from \"../types\"\r\n\r\nconst ProductContext = React.createContext<ProductType[] | undefined>(undefined)\r\ntype CartContext = {\r\n\tcarts: CartType[] | undefined\r\n\thandleSubtractQuantity: (cartIndex: number, id: number) => void\r\n\thandleAddQuantity: (cartIndex: number, id: number) => void\r\n\thandleRemoveProduct: (cartIndex: number, id: number) => void\r\n\thandleRemoveCart: (cartId: number) => void\r\n\thandleApprovedCart: (cartId: number) => void\r\n}\r\nconst CartContext = React.createContext<CartContext>({\r\n\tcarts: undefined,\r\n\thandleSubtractQuantity: () => {},\r\n\thandleAddQuantity: () => {},\r\n\thandleRemoveProduct: () => {},\r\n\thandleRemoveCart: () => {},\r\n\thandleApprovedCart: () => {},\r\n})\r\n\r\nexport { ProductContext, CartContext }\r\n","import React from \"react\"\r\n\r\nimport \"./button.scss\"\r\n\r\ntype Props = {\r\n\tchildren: any\r\n\tonClickHandler: () => void\r\n}\r\n\r\nconst Button: Function = ({ children, onClickHandler }: Props) => {\r\n\treturn (\r\n\t\t<button onClick={onClickHandler} className='button'>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import { faMinus, faPlus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useContext } from \"react\"\r\n\r\nimport { ProductContext, CartContext } from \"../../context/context\"\r\nimport { CartProductType, ProductType } from \"../../types\"\r\nimport Button from \"../button/Button\"\r\n\r\nimport \"./product.scss\"\r\n\r\ntype Props = {\r\n\tcartProduct: CartProductType\r\n\tcartIndex: number\r\n\twithButtons: boolean\r\n}\r\n\r\nconst Product: Function = ({ cartProduct, cartIndex, withButtons }: Props) => {\r\n\tconst products = useContext(ProductContext)!\r\n\tlet carts = useContext(CartContext)!\r\n\r\n\treturn products.map((product: ProductType) => {\r\n\t\tif (product.id === cartProduct.productId) {\r\n\t\t\treturn (\r\n\t\t\t\t<tr className='product' key={`product_${product.id}`}>\r\n\t\t\t\t\t<td className='product__img'>\r\n\t\t\t\t\t\t<img alt={product.title} src={product.image} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td className='product__title'>{product.title}</td>\r\n\t\t\t\t\t<td className='product__price'>{product.price} </td>\r\n\t\t\t\t\t<td className='product__price'>\r\n\t\t\t\t\t\t{withButtons && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClickHandler={() =>\r\n\t\t\t\t\t\t\t\t\tcarts.handleSubtractQuantity(\r\n\t\t\t\t\t\t\t\t\t\tcartIndex,\r\n\t\t\t\t\t\t\t\t\t\tproduct.id,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMinus} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{cartProduct.quantity}\r\n\t\t\t\t\t\t{withButtons && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClickHandler={() =>\r\n\t\t\t\t\t\t\t\t\tcarts.handleAddQuantity(\r\n\t\t\t\t\t\t\t\t\t\tcartIndex,\r\n\t\t\t\t\t\t\t\t\t\tproduct.id,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t{withButtons && (\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClickHandler={() =>\r\n\t\t\t\t\t\t\t\t\tcarts.handleRemoveProduct(\r\n\t\t\t\t\t\t\t\t\t\tcartIndex,\r\n\t\t\t\t\t\t\t\t\t\tproduct.id,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null\r\n\t})\r\n}\r\n\r\nexport default Product\r\n","import React, { useContext } from \"react\"\r\n\r\nimport \"./cartItem.scss\"\r\nimport Product from \"../product/Product\"\r\n\r\nimport { CartProductType, CartType } from \"../../types\"\r\n\r\nimport { CartContext } from \"../../context/context\"\r\nimport Button from \"../button/Button\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCheck, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\ntype Props = {\r\n\tcart: CartType\r\n\tcartIndex: number\r\n\twithButtons: boolean\r\n}\r\nconst CartItem: Function = ({\r\n\tcart,\r\n\tcartIndex,\r\n\twithButtons,\r\n}: Props): JSX.Element => {\r\n\tconst carts = useContext(CartContext)\r\n\treturn (\r\n\t\t<div className='cartItem' data-testid='cart-item'>\r\n\t\t\t<p className='cartItem__title'>\r\n\t\t\t\tOrder number: {cart.id}\r\n\t\t\t\t{withButtons && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClickHandler={() =>\r\n\t\t\t\t\t\t\t\tcarts.handleRemoveCart(cart.id)\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClickHandler={() =>\r\n\t\t\t\t\t\t\t\tcarts.handleApprovedCart(cart.id)\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheck} />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t\t<table cellPadding={0} cellSpacing={0} data-testid='cart-table'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Image</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t<th>Quantity</th>\r\n\t\t\t\t\t\t{withButtons && <th>Remove</th>}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{cart.products.map((cartProduct: CartProductType) => (\r\n\t\t\t\t\t\t<Product\r\n\t\t\t\t\t\t\tcartId={cart.id}\r\n\t\t\t\t\t\t\tcartIndex={cartIndex}\r\n\t\t\t\t\t\t\tkey={`product_${cartProduct.productId}`}\r\n\t\t\t\t\t\t\tcartProduct={cartProduct}\r\n\t\t\t\t\t\t\twithButtons={withButtons}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CartItem\r\n","import React, { useContext } from \"react\"\r\n\r\nimport { ProductContext } from \"../../context/context\"\r\nimport { CartProductType, ProductType } from \"../../types\"\r\n\r\nimport \"./productSummary.scss\"\r\n\r\ntype Props = {\r\n\tcartProduct: CartProductType\r\n\tcartIndex: number\r\n}\r\n\r\nconst ProductSummary: Function = ({ cartProduct, cartIndex }: Props) => {\r\n\tconst products = useContext(ProductContext)!\r\n\tconst total = (price: number, quantity: number) => {\r\n\t\tlet discount: number = 0\r\n\t\tif (quantity > 1) {\r\n\t\t\tif (quantity === 2) {\r\n\t\t\t\tdiscount = 0.2\r\n\t\t\t} else if (quantity === 3) {\r\n\t\t\t\tdiscount = 0.3\r\n\t\t\t} else if (quantity >= 4) {\r\n\t\t\t\tdiscount = 0.4\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<del>${(price * quantity).toFixed(2)}</del>\r\n\t\t\t\t\t<br />-{discount * 100}%\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className='price'>\r\n\t\t\t\t\t\t$\r\n\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\tprice * quantity -\r\n\t\t\t\t\t\t\tprice * quantity * discount\r\n\t\t\t\t\t\t).toFixed(2)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn `$${(price * quantity).toFixed(2)}`\r\n\t\t}\r\n\t}\r\n\r\n\treturn products.map((product: ProductType) => {\r\n\t\tif (product.id === cartProduct.productId) {\r\n\t\t\treturn (\r\n\t\t\t\t<tr className='product' key={`product_${product.id}`}>\r\n\t\t\t\t\t<td className='product__img'>\r\n\t\t\t\t\t\t<img alt={product.title} src={product.image} />\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td className='product__title'>{product.title}</td>\r\n\t\t\t\t\t<td className='product__price'>{product.price} </td>\r\n\t\t\t\t\t<td className='product__price'>{cartProduct.quantity}</td>\r\n\t\t\t\t\t<td>{total(product.price, cartProduct.quantity)}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null\r\n\t})\r\n}\r\n\r\nexport default ProductSummary\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\n\r\nimport { CartProductType } from \"../../types\"\r\nimport ProductSummary from \"../productSummary/ProductSummary\"\r\nimport { ProductContext } from \"../../context/context\"\r\n\r\nimport \"./summary.scss\"\r\n\r\ntype Props = {\r\n\tcartProduct: CartProductType[]\r\n}\r\n\r\nconst Summary: Function = ({ cartProduct }: Props) => {\r\n\tconst products = useContext(ProductContext)\r\n\tconst [finalPrice, setFinalPrice] = useState<number>(0)\r\n\tconst totalSummary = () => {\r\n\t\tlet total: number = 0\r\n\t\tcartProduct.forEach((cart, index) => {\r\n\t\t\tlet price: number = Number(\r\n\t\t\t\tproducts\r\n\t\t\t\t\t?.filter((product) => product.id === cart.productId)\r\n\t\t\t\t\t.map((product) => product.price),\r\n\t\t\t)\r\n\t\t\tif (cart.quantity === 2) {\r\n\t\t\t\tprice = price - price * 0.2\r\n\t\t\t} else if (cart.quantity === 3) {\r\n\t\t\t\tprice = price - price * 0.3\r\n\t\t\t} else if (cart.quantity >= 4) {\r\n\t\t\t\tprice = price - price * 0.4\r\n\t\t\t}\r\n\t\t\ttotal += cart.quantity * price\r\n\t\t})\r\n\t\tsetFinalPrice(Number(total.toFixed(2)))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\ttotalSummary()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='summaryItem' data-testid='summary-item'>\r\n\t\t\t<table cellPadding={0} cellSpacing={0} data-testid='summary-table'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Image</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t<th>Quantity</th>\r\n\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{cartProduct.map((cart: CartProductType) => (\r\n\t\t\t\t\t\t<ProductSummary\r\n\t\t\t\t\t\t\tkey={`product_${cart.productId}`}\r\n\t\t\t\t\t\t\tcartProduct={cart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr className='total-price'>\r\n\t\t\t\t\t\t<td colSpan={4}>Total</td>\r\n\t\t\t\t\t\t<td colSpan={1}>${finalPrice}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Summary\r\n","import React from \"react\"\r\nimport { CartType } from \"../../types\"\r\nimport CartItem from \"../cartItem/CartItem\"\r\n\r\nimport \"./discards.scss\"\r\n\r\ntype Props = {\r\n\tdiscards: CartType[]\r\n}\r\nconst Discards: Function = ({ discards }: Props) => {\r\n\treturn (\r\n\t\t<div className='discards'>\r\n\t\t\t<h2 className='discards__title'>Your discard list</h2>\r\n\t\t\t{discards.map((discard, cartIndex: number) => (\r\n\t\t\t\t<div key={`discard_${discard.id}`}>\r\n\t\t\t\t\t<CartItem\r\n\t\t\t\t\t\tkey={`cart_${discard.id}`}\r\n\t\t\t\t\t\tcart={discard}\r\n\t\t\t\t\t\tcartIndex={cartIndex}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Discards\r\n","import React from \"react\"\r\nimport { CartType } from \"../../types\"\r\nimport CartItem from \"../cartItem/CartItem\"\r\n\r\nimport \"./approved.scss\"\r\n\r\ntype Props = {\r\n\tapproved: CartType[]\r\n}\r\nconst Approved: Function = ({ approved }: Props) => {\r\n\treturn (\r\n\t\t<div className='approved'>\r\n\t\t\t<h2 className='approved__title'>Your approved list</h2>\r\n\t\t\t{approved.map((approved, cartIndex: number) => (\r\n\t\t\t\t<div key={`approved_${approved.id}`}>\r\n\t\t\t\t\t<CartItem\r\n\t\t\t\t\t\tkey={`cart_${approved.id}`}\r\n\t\t\t\t\t\tcart={approved}\r\n\t\t\t\t\t\tcartIndex={cartIndex}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Approved\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\"\r\nimport axios from \"axios\"\r\n\r\nimport CartItem from \"../../components/cartItem/CartItem\"\r\nimport Summary from \"../../components/summary/Summary\"\r\n\r\nimport { ProductContext, CartContext } from \"../../context/context\"\r\n\r\nimport { CartProductType, CartType, ProductType } from \"../../types\"\r\n\r\nimport \"./cart.scss\"\r\nimport Discards from \"../../components/discards/Discards\"\r\nimport Approved from \"../../components/approved/Approved\"\r\nconst api = \"https://fakestoreapi.com\"\r\nconst numberOfCarts: number = 5\r\n\r\nconst Cart: React.FC = () => {\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true)\r\n\tconst [cartError, setCartError] = useState<string | null>(null)\r\n\tconst [productError, setProductError] = useState<string | null>(null)\r\n\tconst [carts, setCarts] = useState<CartType[]>([])\r\n\tconst [products, setProducts] = useState<ProductType[]>([])\r\n\tconst [discards, setDiscards] = useState<CartType[]>([])\r\n\tconst [approved, setApproved] = useState<CartType[]>([])\r\n\tconst [showSummary, setShowSummary] = useState<boolean>(false)\r\n\tconst [summaryCarts, setSummaryCarts] = useState<CartProductType[]>([])\r\n\r\n\tconst handleRemoveCart = (cartId: number) => {\r\n\t\tconst clonedCarts = carts.filter((cart) => cart.id !== cartId)\r\n\t\tconst removeCarts = [...discards]\r\n\t\tcarts.forEach((cart) => {\r\n\t\t\tif (cart.id === cartId) {\r\n\t\t\t\tremoveCarts.push(cart)\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetCarts(clonedCarts)\r\n\t\tsetDiscards(removeCarts)\r\n\t\t//Send delete cart request\r\n\t\tfetch(`${api}/carts/${cartId}`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((json) => console.log(json))\r\n\t\tif (carts.length < 2) {\r\n\t\t\thandleCheckout()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleApprovedCart = (cartId: number) => {\r\n\t\tconst clonedCarts = carts.filter((cart) => cart.id !== cartId)\r\n\t\tconst approvedCarts = [...approved]\r\n\t\tcarts.forEach((cart) => {\r\n\t\t\tif (cart.id === cartId) {\r\n\t\t\t\tapprovedCarts.push(cart)\r\n\t\t\t\t//Send request for approved cart\r\n\t\t\t\tfetch(`${api}/carts`, {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tbody: JSON.stringify(cart),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((json) => console.log(json))\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetCarts(clonedCarts)\r\n\t\tsetApproved(approvedCarts)\r\n\r\n\t\tif (carts.length < 2) {\r\n\t\t\thandleCheckout()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubtractQuantity = (cartIndex: number, id: number) => {\r\n\t\tconst clonedCarts = [...carts]\r\n\t\tconst modifiedCarts = clonedCarts[cartIndex].products.map((product) => {\r\n\t\t\tif (product.productId === id) {\r\n\t\t\t\tif (product.quantity < 1) {\r\n\t\t\t\t\treturn product\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproductId: product.productId,\r\n\t\t\t\t\tquantity: product.quantity - 1,\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn product\r\n\t\t\t}\r\n\t\t})\r\n\t\tclonedCarts[cartIndex].products = modifiedCarts\r\n\t\tsetCarts(clonedCarts)\r\n\t}\r\n\tconst handleAddQuantity = (cartIndex: number, id: number) => {\r\n\t\tconst clonedCarts = [...carts]\r\n\t\tconst modifiedCarts = clonedCarts[cartIndex].products.map((product) => {\r\n\t\t\tif (product.productId === id) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tproductId: product.productId,\r\n\t\t\t\t\tquantity: product.quantity + 1,\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn product\r\n\t\t\t}\r\n\t\t})\r\n\t\tclonedCarts[cartIndex].products = modifiedCarts\r\n\r\n\t\tsetCarts(clonedCarts)\r\n\t}\r\n\tconst handleRemoveProduct = (cartIndex: number, id: number) => {\r\n\t\tconst clonedCarts = [...carts]\r\n\t\tconst products = clonedCarts[cartIndex].products\r\n\t\tconst filteredProduct = products.filter(\r\n\t\t\t(product) => product.productId === id,\r\n\t\t)\r\n\t\tconst removedCarts = [...discards]\r\n\r\n\t\tif (\r\n\t\t\tremovedCarts.find(\r\n\t\t\t\t(cart) => cart.id === clonedCarts[cartIndex].id,\r\n\t\t\t) === undefined\r\n\t\t) {\r\n\t\t\tconst { products, ...cart } = clonedCarts[cartIndex]\r\n\t\t\tconst newCart = { ...cart, products: filteredProduct }\r\n\t\t\tremovedCarts.push(newCart)\r\n\t\t} else {\r\n\t\t\tremovedCarts.forEach((cart) => {\r\n\t\t\t\tif (cart.id === clonedCarts[cartIndex].id) {\r\n\t\t\t\t\tcart.products.push(filteredProduct[0])\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (products.length > 1) {\r\n\t\t\tconst filteredCart = products.filter(\r\n\t\t\t\t(product) => product.productId !== id,\r\n\t\t\t)\r\n\r\n\t\t\tclonedCarts[cartIndex].products = filteredCart\r\n\t\t\tsetCarts(clonedCarts)\r\n\t\t} else {\r\n\t\t\tconst filteredCarts = clonedCarts.filter(\r\n\t\t\t\t(cart, index) => index !== cartIndex,\r\n\t\t\t)\r\n\r\n\t\t\tsetCarts(filteredCarts)\r\n\t\t}\r\n\r\n\t\tsetDiscards(removedCarts)\r\n\t\tfetch(`${api}/products/${id}`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((json) => console.log(json))\r\n\t}\r\n\tconst handleCheckout = () => {\r\n\t\tconst summaryProducts: any = []\r\n\t\tapproved.forEach((cart) =>\r\n\t\t\tcart.products.forEach((product) => {\r\n\t\t\t\tsummaryProducts.push(product)\r\n\t\t\t}),\r\n\t\t)\r\n\r\n\t\tconst result = summaryProducts.reduce(\r\n\t\t\t(r: any, { productId, quantity }: any) => {\r\n\t\t\t\tr[productId] = r[productId] || {\r\n\t\t\t\t\tproductId,\r\n\t\t\t\t\tquantity: 0,\r\n\t\t\t\t}\r\n\t\t\t\tr[productId].quantity += quantity\r\n\t\t\t\treturn r\r\n\t\t\t},\r\n\t\t\t{},\r\n\t\t)\r\n\r\n\t\tsetSummaryCarts(Object.values(result))\r\n\t\tsetShowSummary(true)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\t//Fetch 5 carts from API\r\n\t\tconst fetchCarts = async () => {\r\n\t\t\tawait axios\r\n\t\t\t\t.get(`${api}/carts?limit=${numberOfCarts}`)\r\n\t\t\t\t.then(function (response: any) {\r\n\t\t\t\t\tsetCarts(response.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error: string) {\r\n\t\t\t\t\tsetCartError(error)\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t//Fetch all products from API\r\n\t\tconst fetchProducts = async () => {\r\n\t\t\tsetIsLoading(true)\r\n\t\t\tawait axios\r\n\t\t\t\t.get(`${api}/products`)\r\n\t\t\t\t.then(function (response: any) {\r\n\t\t\t\t\tsetProducts(response.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error: string) {\r\n\t\t\t\t\tsetProductError(error)\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setIsLoading(false))\r\n\t\t}\r\n\t\tfetchProducts()\r\n\t\tfetchCarts()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='cart' data-testid='cart'>\r\n\t\t\t<h1 className='cart__title'>Your cart</h1>\r\n\t\t\t<ProductContext.Provider value={products}>\r\n\t\t\t\t{!showSummary && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<CartContext.Provider\r\n\t\t\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\t\t\tcarts,\r\n\t\t\t\t\t\t\t\thandleSubtractQuantity,\r\n\t\t\t\t\t\t\t\thandleAddQuantity,\r\n\t\t\t\t\t\t\t\thandleRemoveProduct,\r\n\t\t\t\t\t\t\t\thandleRemoveCart,\r\n\t\t\t\t\t\t\t\thandleApprovedCart,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{cartError ? \"Failed to load cart\" : null}\r\n\t\t\t\t\t\t\t{productError ? \"Failed to load products\" : null}\r\n\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t<p className='loading'>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\t\tclassName='fa-spin'\r\n\t\t\t\t\t\t\t\t\t\ticon={faSpinner}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t) : carts !== undefined ? (\r\n\t\t\t\t\t\t\t\tcarts.map((cart, cartIndex) => (\r\n\t\t\t\t\t\t\t\t\t<CartItem\r\n\t\t\t\t\t\t\t\t\t\tkey={`cart_${cart.id}`}\r\n\t\t\t\t\t\t\t\t\t\tcart={cart}\r\n\t\t\t\t\t\t\t\t\t\tcartIndex={cartIndex}\r\n\t\t\t\t\t\t\t\t\t\twithButtons={true}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</CartContext.Provider>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{showSummary && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Summary cartProduct={summaryCarts} />\r\n\t\t\t\t\t\t<div className='choice-lists'>\r\n\t\t\t\t\t\t\t<Approved approved={approved} withButtons={false} />\r\n\t\t\t\t\t\t\t{discards.length ? (\r\n\t\t\t\t\t\t\t\t<Discards\r\n\t\t\t\t\t\t\t\t\tdiscards={discards}\r\n\t\t\t\t\t\t\t\t\twithButtons={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className='discards'>\r\n\t\t\t\t\t\t\t\t\t<h2 className='discards__title'>\r\n\t\t\t\t\t\t\t\t\t\tYou have no discard item\r\n\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</ProductContext.Provider>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cart\r\n","import React from \"react\"\nimport Cart from \"./pages/cart/Cart\"\n\nimport \"./app.scss\"\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='container'>\n\t\t\t\t<Cart />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\n// Load Roboto typeface\nrequire(\"typeface-roboto\")\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}